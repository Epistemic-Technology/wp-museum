<?xml version="1.0"?>

<ruleset name="WordPress Coding Standards for WordPress Museum Plugin">
	<description>Sniffs for WordPress plugins, with minor for WP-Museum</description>
	<!-- Only check .php files -->
    <arg name="extensions" value="php"/>

	<!-- Check for PHP 8.x compatibility -->
    <config name="testVersion" value="8.2-"/>
	<config name="minimum_wp_version" value="6.2"/>
	<config name="installed_paths" value="vendor/phpcompatibility/php-compatibility" />

	<exclude-pattern type="relative">vendor/*</exclude-pattern>
	<exclude-pattern type="relative">node_modules/*</exclude-pattern>
	<exclude-pattern type="relative">build/*</exclude-pattern>
	<exclude-pattern type="relative">wordpress/*</exclude-pattern>

    <rule ref="PHPCompatibility"/>
	
	<rule ref="WordPress-Extra">
		<!-- Short array syntax is disallowed by WordPress-Extra coding
		standard because it might be hard to distinguish from other uses of
		brackets and because it might be confusing for beginners. These seem
		like silly reasons. Short array syntax is much cleaner and easier to
		read.
		
		@see https://make.wordpress.org/core/2019/07/12/php-coding-standards-changes/
		-->
		<exclude name="Generic.Arrays.DisallowShortArraySyntax.Found" />
	</rule>
	<rule ref="Generic.Arrays.DisallowShortArraySyntax">
    	<exclude name="Generic.Arrays.DisallowShortArraySyntax"/>
	</rule>
	<rule ref="Universal.Arrays.DisallowShortArraySyntax">
    	<exclude name="Universal.Arrays.DisallowShortArraySyntax"/>
	</rule>
	<rule ref="WordPress.DB.DirectDatabaseQuery.DirectQuery">
		<!-- This rule is overly aggressive -->
		<exclude name="WordPress.DB.DirectDatabaseQuery.DirectQuery"/>
	</rule>
	<rule ref="WordPress.Security.NonceVerification.Recommended">
		<!-- In many cases nonce verifiaction doesn't seem necessary. 
		Should revisit this exclusion at some point.
		-->
		<exclude name="WordPress.Security.NonceVerification.Recommended"/>
	</rule>
	<rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
		<!-- This rule flags idiomatic uses of the short echo tag. -->
		<exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound"/>
	</rule>
	<rule ref="Squiz.PHP.EmbeddedPhp.ShortOpenEchoNoSemicolon">
		<!-- Omitting semicolons for short echo tags is accepted practice. -->
		<exclude name="Squiz.PHP.EmbeddedPhp.ShortOpenEchoNoSemicolon"/>
	</rule>
	<rule ref="WordPress.WP.AlternativeFunctions">
		<!-- WP_Filesystem functions aren't suitable for this project-->
		<exclude name="WordPress.WP.AlternativeFunctions.unlink_unlink"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fopen"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fclose"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fread"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_fwrite"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_rmdir"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_unlink"/>
		<exclude name="WordPress.WP.AlternativeFunctions.file_system_operations_mkdir"/>
	</rule>
	
</ruleset>